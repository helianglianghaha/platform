"""
Django settings for QualityPlatform project.

Generated by 'django-admin startproject' using Django 2.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""



import os
from django.conf import settings
from django.conf.urls.static import static
# from quality.view.API.model import  Modeldata
# from django.views.generic import  TemplateView

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'f3*8&q7l8dy^vc$5#4t8wo3#$ygm*6wkw+4oteb^q4rfjsc8p^'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG =True
#DEBUG =False

SESSION_COOKIE_NAME = "sessionid"   #Session的cookie保存在浏览器上时的key
SESSION_COOKIE_PATH = "/"            #Session的cookie保存的路径（默认）
SESSION_COOKIE_DOMAIN = None          # Session的cookie保存的域名（默认）
SESSION_COOKIE_AGE = 3600*5
# SESSION_COOKIE_SECURE = False         #是否Https传输cookie（默认）


ALLOWED_HOSTS = ['*']
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_ALLOW_ALL = True

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework.authtoken',
    'quality',
    'django_crontab',
    # 'Modeldata'
]
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.TokenAuthentication',
    )
}

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    # 'django.middleware.csrf.CsrfViewMiddleware',
    # 'corsheaders.middleware.CorsMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]
# AUTH_USER_MODEL = "users.UserProfile"

ROOT_URLCONF = 'QualityPlatform.urls'
# APPEND_SLASH=False
TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.getcwd()+'/static/dist'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'QualityPlatform.wsgi.application'

# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases AYXQA_TEST

DATABASES = {
    'default': {
        'ENGINE':'django.db.backends.mysql',
        'NAME':'testplatform',
        'USER':'root',
        'PASSWORD':'12345678',
        'HOST':'127.0.0.1',
        'PORT':'3306',

        # 'ENGINE':'django.db.backends.mysql',
        # 'NAME':'testplatform',
            # 'USER':'root1',
        # 'PASSWORD':'Goodlearning2021@@',
        # 'HOST':'rm-uf60nso6wlf92lhtjzo.mysql.rds.aliyuncs.com',
        # 'PORT':'3306',
        #     'ENGINE': 'django.db.backends.sqlite3',
        #     'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

CORS_ORIGIN_ALLOW_ALL = False
CORS_ALLOW_CREDENTIALS = True
CORS_ORIGIN_WHITELIST = (
    'http://localhost:8000' # Here was the problem indeed and it has to be http://localhost:3000, not http://localhost:3000/
)
# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'zh-hans'
# zh-hans
# en-us
# TIME_ZONE='UTC'
TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = True

USE_TZ = False


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'
STATICFILES_DIRS=[
  os.path.join(BASE_DIR, "C:/TestPlat/platForm/static/dist/static")
]
HERE=os.path.dirname(os.path.abspath(__file__))
HERE=os.path.join(HERE,'../')


MEDIA_ROOT = os.path.join(BASE_DIR, 'media').replace("\\", "/")
MEDIA_URL = '/media/'
# STATIC_ROOT=os.path.join(BASE_DIR,'collectstatic')

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

STATICFILES_DIRS=[os.path.join(HERE,'static'),]
X_FRAME_OPTIONS = 'ALLOWALL'

#定时执行任务
CRONJOBS = [
    #('*/1 * * * *', '你的app名.定时函数所在的py文件名.定时函数名'),
    # ('0   0 1 * *', '你的app名.定时函数所在的py文件名.定时函数名', '> 输出文件路径和名称'),
    #('*/5 * * * *','quality.jira.Issues.get_updated_issues_insert_db','>>../issues.log')
    ('*/5 * * * *','E:/TestPlatClone/TestPlat/platForm/quality/xunJian/batchXunJian')
]
STATIC_ROOT = os.path.abspath(os.path.join(os.path.dirname(__file__), os.path.pardir))
# LOG_PATH = os.path.join(STATIC_ROOT, 'logs')
# if not os.path.isdir(LOG_PATH):
#     os.mkdir(LOG_PATH)

# LOGGING = {
#     'version': 1, # 必须指定为1
#     'disable_existing_loggers': False,  # 禁用默认配置中的所有logger
#     'encoding':'utf-8',
#     'formatters': {
#         'verbose': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(funcName)s %(lineno)d %(message)s'
#         },
#         # 详细的日志格式
#         'standard': {
#             'format': '[%(asctime)s][%(threadName)s:%(thread)d][task_id:%(name)s][%(filename)s:%(lineno)d]'
#                       '[%(levelname)s][%(message)s]'
#         },
#         'simple': {
#             'format': '%(levelname)s %(asctime)s %(module)s %(lineno)d %(message)s'
#         },
#     },
#     'filters': {
#         'require_debug_true': {
#             '()': 'django.utils.log.RequireDebugTrue',
#         },
#     },
#     'handlers': {
#         'console': {
#             'level': 'DEBUG',
#             'filters': ['require_debug_true'],
#             'class': 'logging.StreamHandler',
#             'formatter': 'simple'
#         },
#         'file': {
#             'level': 'INFO',
#             'class': 'logging.handlers.RotatingFileHandler',
#             'filename': os.path.join(LOG_PATH,'console.log'),  # 日志文件的位置
#             'maxBytes': 3 * 1024 * 1024, #每个日志文件大小 这里是文件到 3M 会自动清空
#             'encoding':'utf-8',
#             'backupCount': 5, # 日志文件个数:备份份数
#             'formatter': 'verbose'
#         },

#     },
#     'loggers': {
#         'django': {  # 定义了一个名为django的日志器
#             'handlers': ['console', 'file'],
#             'propagate': True,
#             'level': 'INFO'
#         },
#     }

# }
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": "redis://127.0.0.1:6379/1",
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
            "PASSWORD": ""
        }
    }
}

# CACHES = {
#     'default': {
#         'BACKEND': 'django_redis.cache.RedisCache',
#         # 'LOCATION': 'redis://10.10.254.4:9055',#生产
#         # 'LOCATION': 'redis://127.0.0.1:6379',#测试
#         "OPTIONS": {
#             # "CONNECTION_POOL_KWARGS": {"max_connections": 100},
#             # "CLIENT_CLASS": "django_redis.client.DefaultClient",
#             # "PASSWORD": "",
#             "PICKLE_VERSION": -1
#         },
#     },
# }
REDIS_TIMEOUT=7*24*60*60
CUBES_REDIS_TIMEOUT=60*60
NEVER_REDIS_TIMEOUT=365*24*60*60
