# Generated by Django 3.2.6 on 2021-08-30 16:09

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Executinglog',
            fields=[
                ('executing_id', models.AutoField(primary_key=True, serialize=False, verbose_name='日志ID')),
                ('executing_name', models.CharField(max_length=100, verbose_name='执行名称')),
                ('executing_testmd', models.CharField(max_length=50, verbose_name='接口用例')),
                ('executing_testscript_id', models.IntegerField(verbose_name='UI用例')),
                ('executing_starttime', models.DateTimeField(auto_now_add=True, verbose_name='保存日期')),
                ('executing_endtime', models.DateTimeField(auto_now=True, verbose_name='最后修改日期')),
            ],
        ),
        migrations.CreateModel(
            name='Keyword',
            fields=[
                ('key_id', models.AutoField(primary_key=True, serialize=False, verbose_name='关键字ID')),
                ('key_name', models.CharField(max_length=100, verbose_name='关键字名称')),
            ],
        ),
        migrations.CreateModel(
            name='Modeldata',
            fields=[
                ('modeldata_id', models.AutoField(primary_key=True, serialize=False, verbose_name='模块ID')),
                ('modelData', models.CharField(max_length=50, verbose_name='模块名称')),
                ('subModelData', models.IntegerField(verbose_name='所属模块')),
                ('modelData_pripeople', models.CharField(max_length=50, verbose_name='负责人')),
                ('modelData_testenvironment', models.CharField(max_length=50, verbose_name='测试环境')),
                ('modelData_proenvironment', models.CharField(max_length=50, verbose_name='生产环境')),
            ],
        ),
        migrations.CreateModel(
            name='Modelversion',
            fields=[
                ('Modelversion_id', models.AutoField(primary_key=True, serialize=False, verbose_name='版本ID')),
                ('modeldata_name', models.CharField(max_length=50, verbose_name='版本名称')),
                ('modeldata_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality.modeldata')),
            ],
        ),
        migrations.CreateModel(
            name='PostList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                'ordering': ('-pub_date',),
            },
        ),
        migrations.CreateModel(
            name='Testcase',
            fields=[
                ('testcase_id', models.AutoField(primary_key=True, serialize=False, verbose_name='测试用例ID')),
                ('testcase_caseName', models.CharField(default=None, max_length=100, verbose_name='测试用例名称')),
                ('testcase_casePrecondition', models.CharField(default=None, max_length=100, verbose_name='前置条件')),
                ('testcase_caseSteps', models.CharField(default=None, max_length=500, verbose_name='操作步骤')),
                ('testcase_caseExpected', models.CharField(default=None, max_length=500, verbose_name='预期结果')),
                ('testcase_caseType', models.CharField(default=None, max_length=10, verbose_name='用例类型')),
                ('testcase_caseLeve', models.CharField(default=None, max_length=10, verbose_name='用例等级')),
                ('testcase_caseVersion', models.CharField(default=None, max_length=50, verbose_name='所属版本')),
            ],
        ),
        migrations.CreateModel(
            name='Testcookies',
            fields=[
                ('cookie_id', models.AutoField(primary_key=True, serialize=False, verbose_name='cookieId')),
                ('cookie_name', models.CharField(max_length=50, verbose_name='cookie名称')),
                ('cookie_value', models.CharField(max_length=1000, verbose_name='cookie值')),
                ('cookie_domain', models.CharField(max_length=50, verbose_name='cookiehost')),
                ('cookie_path', models.CharField(max_length=50, verbose_name='cookie路径')),
            ],
        ),
        migrations.CreateModel(
            name='Testemail',
            fields=[
                ('email_id', models.AutoField(primary_key=True, serialize=False, verbose_name='emailID')),
                ('email_serverAddress', models.CharField(max_length=50, verbose_name='邮件服务器地址')),
                ('email_emailTeam', models.CharField(max_length=50, verbose_name='项目')),
                ('email_fromAddr', models.CharField(max_length=50, verbose_name='发件人地址')),
                ('email_toAddr', models.CharField(max_length=100, verbose_name='收件人地址')),
                ('email_account', models.CharField(max_length=100, verbose_name='账号')),
                ('email_password', models.CharField(max_length=50, verbose_name='密码')),
            ],
        ),
        migrations.CreateModel(
            name='Testextract',
            fields=[
                ('extract_id', models.AutoField(primary_key=True, serialize=False, verbose_name='提取变量ID')),
                ('extract_apiName', models.CharField(max_length=50, verbose_name='用例名称')),
                ('extract_apiExtractExpression', models.CharField(max_length=50, verbose_name='提取表达式')),
                ('extract_apiExtractResponse', models.CharField(max_length=1000, verbose_name='提取值')),
            ],
        ),
        migrations.CreateModel(
            name='Testpicture',
            fields=[
                ('picture_id', models.AutoField(primary_key=True, serialize=False, verbose_name='新增图片id')),
                ('picture_testcaseId', models.IntegerField(verbose_name='用例id')),
                ('picture_scriptId', models.IntegerField(verbose_name='脚本id')),
                ('picture_file', models.CharField(max_length=100, verbose_name='保存图片地址')),
            ],
        ),
        migrations.CreateModel(
            name='Testscript',
            fields=[
                ('script_id', models.AutoField(primary_key=True, serialize=False, verbose_name='脚本ID')),
                ('script_testDataName', models.CharField(max_length=100, verbose_name='脚本名称')),
                ('script_testDataPositioning', models.CharField(max_length=50, verbose_name='定位方法')),
                ('script_testDataKeyWord', models.CharField(max_length=50, verbose_name='关键字')),
                ('script_testDataPremise', models.CharField(max_length=1000, verbose_name='前置条件')),
                ('script_testDataElement', models.CharField(max_length=1000, verbose_name='元素信息')),
                ('script_testDataParameter', models.CharField(max_length=1000, verbose_name='参数信息')),
                ('script_testDataAssert', models.CharField(max_length=1000, verbose_name='断言信息')),
                ('script_testDataProject', models.CharField(max_length=50, verbose_name='项目')),
                ('script_testDataVersion', models.CharField(max_length=50, verbose_name='版本')),
                ('script_TestDataCase', models.CharField(max_length=50, verbose_name='用例')),
                ('script_testResult', models.CharField(max_length=50, verbose_name='测试结果')),
            ],
        ),
        migrations.CreateModel(
            name='Testvariable',
            fields=[
                ('variable_id', models.AutoField(primary_key=True, serialize=False, verbose_name='变量ID')),
                ('variableKey', models.CharField(max_length=50, verbose_name='key')),
                ('variableValue', models.CharField(max_length=1000, verbose_name='value')),
            ],
        ),
        migrations.CreateModel(
            name='Testapi',
            fields=[
                ('testapi_id', models.AutoField(primary_key=True, serialize=False, verbose_name='接口ID')),
                ('testmodelData', models.IntegerField(verbose_name='所属项目')),
                ('testapiHost', models.CharField(max_length=100, verbose_name='域名')),
                ('testapiname', models.CharField(max_length=500, verbose_name='API名称')),
                ('testapiMethod', models.CharField(max_length=50, verbose_name='请求方法')),
                ('testapiUrl', models.CharField(max_length=100, verbose_name='请求URL')),
                ('testapiBody', models.CharField(max_length=1000, verbose_name='请求参数')),
                ('testaddCookiesValue', models.CharField(max_length=50, verbose_name='添加cookies')),
                ('testapiExtractName', models.CharField(max_length=50, verbose_name='正则名称')),
                ('testapiExtractExpression', models.CharField(max_length=100, verbose_name='正则表达式')),
                ('testapiExtractResponse', models.CharField(max_length=1000, verbose_name='提取响应值')),
                ('testapiAssert', models.CharField(max_length=1000, verbose_name='断言')),
                ('testapiResponse', models.CharField(max_length=1000, verbose_name='响应值')),
                ('testcookiesValue', models.CharField(max_length=50, verbose_name='是否添加cookies')),
                ('testapiRequest', models.CharField(max_length=50, verbose_name='请求协议')),
                ('testaddPassWordFree', models.CharField(max_length=50, verbose_name='添加免密配置')),
                ('testpassWordFree', models.CharField(max_length=50, verbose_name='免密配置')),
                ('teststatuscode', models.CharField(max_length=10, verbose_name='请求状态码')),
                ('testencoding', models.CharField(max_length=10, verbose_name='编码方式')),
                ('testheader', models.CharField(max_length=1000, verbose_name='请求头')),
                ('testresult', models.IntegerField(default=0, verbose_name='测试结果')),
                ('testurl', models.CharField(max_length=255, verbose_name='测试url')),
                ('Modelversion_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality.modelversion')),
            ],
        ),
        migrations.CreateModel(
            name='Proaddress',
            fields=[
                ('proxyid', models.AutoField(primary_key=True, serialize=False, verbose_name='代理地址ID')),
                ('pro_address', models.CharField(max_length=1000, verbose_name='版本名称')),
                ('pro_openXunjian', models.CharField(max_length=50, verbose_name='开启巡检')),
                ('pro_qixin', models.CharField(max_length=50, verbose_name='企信群')),
                ('pro_openQiXin', models.CharField(max_length=50, verbose_name='是否开启通知')),
                ('Modelversion_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='quality.modelversion')),
            ],
        ),
    ]
