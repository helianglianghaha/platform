from django.db import models
from django.utils import timezone
import django.utils.timezone as timezone

class buganalysis(models.Model):
    bug_id=models.AutoField(verbose_name="版本管理ID",primary_key=True)
    id = models.CharField(max_length=50, verbose_name="bugID", default=None)
    name = models.CharField(max_length=100, verbose_name="标题", default=None)
    description = models.CharField(max_length=100, verbose_name="详细描述", default=None)
    module = models.CharField(max_length=500, verbose_name="模块", default=None)
    status = models.CharField(max_length=500, verbose_name="状态", default=None)
    resolution = models.CharField(max_length=10, verbose_name="解决方法", default=None)
    priority = models.CharField(max_length=10, verbose_name="优先级", default=None)
    severity = models.CharField(max_length=50, verbose_name="严重程度", default=None)
    platform = models.CharField(max_length=50, verbose_name="软件平台", default=None)
    os = models.CharField(max_length=50, verbose_name="操作系统", default=None)
    testmode = models.CharField(max_length=50, verbose_name="测试方式", default=None)
    testtype = models.CharField(max_length=50, verbose_name="测试类型", default=None)
    testphase = models.CharField(max_length=50, verbose_name="测试阶段", default=None)
    source = models.CharField(max_length=50, verbose_name="缺陷根源", default=None)
    frequency = models.CharField(max_length=50, verbose_name="重现规律", default=None)
    version_report = models.CharField(max_length=50, verbose_name="发现版本", default=None)
    version_test = models.CharField(max_length=50, verbose_name="验证版本", default=None)
    version_fix = models.CharField(max_length=50, verbose_name="合入版本", default=None)
    version_close = models.CharField(max_length=50, verbose_name="关闭版本", default=None)
    baseline_find = models.CharField(max_length=50, verbose_name="发现基线", default=None)
    baseline_join = models.CharField(max_length=50, verbose_name="合入基线", default=None)
    baseline_close = models.CharField(max_length=50, verbose_name="关闭基线", default=None)
    baseline_test = models.CharField(max_length=50, verbose_name="验证基线", default=None)
    originphase = models.CharField(max_length=50, verbose_name="发现阶段", default=None)
    sourcephase = models.CharField(max_length=50, verbose_name="引入阶段", default=None)
    bugtype = models.CharField(max_length=50, verbose_name="缺陷类型", default=None)
    release_id = models.CharField(max_length=50, verbose_name="发布计划", default=None)
    iteration_id = models.CharField(max_length=50, verbose_name="迭代", default=None)
    label = models.CharField(max_length=50, verbose_name="标签", default=None)
    size = models.CharField(max_length=50, verbose_name="规模", default=None)
    comment = models.CharField(max_length=50, verbose_name="评论", default=None)
    commentator = models.CharField(max_length=50, verbose_name="评论人", default=None)
    has_attachment = models.CharField(max_length=50, verbose_name="附件", default=None)
    attachment_uploader = models.CharField(max_length=50, verbose_name="附件上传人", default=None)
    deadline = models.CharField(max_length=50, verbose_name="解决期限", default=None)
    reporter = models.CharField(max_length=50, verbose_name="创建人", default=None)
    created = models.CharField(max_length=50, verbose_name="创建时间", default=None)
    modified = models.CharField(max_length=50, verbose_name="最后修改时间", default=None)
    reopen_time = models.CharField(max_length=50, verbose_name="重新打开时间", default=None)
    lastmodify = models.CharField(max_length=50, verbose_name="最后修改人", default=None)
    de = models.CharField(max_length=50, verbose_name="开发人员", default=None)
    te = models.CharField(max_length=50, verbose_name="解决期限", default=None)
    auditer = models.CharField(max_length=50, verbose_name="审核人", default=None)
    confirmer = models.CharField(max_length=50, verbose_name="验证人", default=None)
    current_owner = models.CharField(max_length=50, verbose_name="处理人", default=None)
    cc = models.CharField(max_length=50, verbose_name="抄送人", default=None)
    fixer = models.CharField(max_length=50, verbose_name="修复人", default=None)
    closer = models.CharField(max_length=50, verbose_name="关闭人", default=None)
    participator = models.CharField(max_length=50, verbose_name="参与人", default=None)
    reject_time = models.CharField(max_length=50, verbose_name="拒绝时间", default=None)
    in_progress_time = models.CharField(max_length=50, verbose_name="接受处理时间", default=None)
    resolved = models.CharField(max_length=50, verbose_name="解决时间", default=None)
    verify_time = models.CharField(max_length=50, verbose_name="验证时间", default=None)
    assigned_time = models.CharField(max_length=50, verbose_name="分配时间", default=None)
    begin = models.CharField(max_length=50, verbose_name="预计开始", default=None)
    due = models.CharField(max_length=50, verbose_name="预计结束", default=None)
    closed = models.CharField(max_length=50, verbose_name="预计结束", default=None)
    effort = models.CharField(max_length=50, verbose_name="预估工时", default=None)
    effort_completed = models.CharField(max_length=50, verbose_name="预计结束", default=None)
    exceed = models.CharField(max_length=50, verbose_name="超出工时", default=None)
    remain = models.CharField(max_length=50, verbose_name="剩余工时", default=None)
    progress = models.CharField(max_length=50, verbose_name="进度", default=None)

    project_id = models.CharField(max_length=50, verbose_name="项目ID", default=None)
    template_id = models.CharField(max_length=50, verbose_name="模板ID", default=None)
    created_from = models.CharField(max_length=50, verbose_name="进度", default=None)
    follower = models.CharField(max_length=50, verbose_name="跟进人", default=None)
    BugStoryRelation_relative_id = models.CharField(max_length=50, verbose_name="进度", default=None)
    BugStoryRelation_story_name = models.CharField(max_length=50, verbose_name="进度", default=None)
    is_delay = models.CharField(max_length=50, verbose_name="延期", default=None)
    delay = models.CharField(max_length=50, verbose_name="进度", default=None)
    status_alias = models.CharField(max_length=50, verbose_name="解决状态", default=None)
    short_id = models.CharField(max_length=50, verbose_name="解决状态", default=None)

class versionUpdate(models.Model):
    '''版本更新'''
    id=models.AutoField(verbose_name="版本更新ID",primary_key=True)
    versionType = models.CharField(max_length=50, verbose_name="版本类型", default=None)
    result=models.CharField(max_length=50, verbose_name="版本更新后，接口是否执行", default=None)
    createtime=models.DateTimeField()





